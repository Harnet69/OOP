В РНР 5.4 есть свой встроенный сервер.

SQLite
id INTEGER PRIMERY KEY //если удалили 3-ю запись, то idшник освобождается, и в него можно вставить новую запись
id INTEGER PRIMERY KEY AUTOINCREMENT // если удалили 3-ю запись, то она исчезла навсегда

Экранирование апострофов
$db -> escapeString($string);через этот метод прогонять строки, чтобы заэкранировать

Создание БД и соединения
$db = new SQLite3('test.db') - создание экземпляра класса
unset($db); - можно удалить, а можно 
закрыть $db -> close();
а потом можно открыть $db -> open('another.db')

Можете наследовать и перегрузить для себя методы
class myDB extends SQLite3{
	function __construct(){
		$this->open('test.db')
	}
}
$db = new MyDB();

Существуют запросы ответные и безответные

Безответные : INSERT DELETE CREATE UPDATE. 
$result = $db -> exec($sql); //для безответных запросов сущ метод exec который возвращает  true-false
$db -> changes(); //метод, чтобы узнать об изменениях 
Отслеживание ошибок:
$db -> lastErrorCode();//возвращает номер ошибки
$db -> lastErrorMsg();//человеческое описание ошибки

Ответные запросы
Подготовленные запросы (во избежание иньекций)
$sql = 'SELECT name FROM user
					WHERE id = :id';//плейсхолдер(бывают именнованные типа :id или индексированные типа :?)
$stmt = $db -> prepare($sql);
$stmt -> bindParam(':id', $id);
$resalt = $stmt -> execute();
$stmt -> close();//если больше запросов не будет, но если еще придет то можно использовать reset()
$row = $result -> fetchArray();(это если SELECT)

Получение выборки
$result = $db ->querySingle($sql,true)//вытащить либо одну запись либо одну колонку
-value или NULL (поумолчанию вытаскивается одна колонка)
-array или empty array(если второй параметр true вытаскивается массив)
-false

$result = $db ->query($sql)/// в случае неудачи - false в случае удачи result

$row = $result -> fetchArray();
SQLITE3_BOTH возвр удвоенный массив
SQLITE3_NUM возвр индексир массив
SQLITE3_ASSOC возвр асоц массив





